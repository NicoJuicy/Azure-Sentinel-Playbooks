{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This playbook will send an email asking for approval, upon approval the playbook will remove the blob/file from storage account and container/file share that was alerted in ASC. Be sure to turn on Storage Account Soft Delete to recover blobs if needed.",
        "author": "Nathan Swift"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Ask-Remove-MalwareFromAzureStorage",
            "type": "string"
        },
        "Sender": {
            "defaultValue": "<username>@<domain> - the email will be sent on behalf of this email address",
            "type": "string"
        },
        "Recipient": {
            "defaultValue": "<SOCDistro>@<domain> - will approve or reject the deletion",
            "type": "string"
        }
    },
    "variables": {
        "ascalertConnectionName": "[concat('ascalert-', parameters('PlaybookName'))]",
        "office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]",
        "funcAppName": "[concat('func', uniqueString(resourceGroup().id))]",
        "insightsLocation": {
            "AzureCloud": "eastus",
            "AzureUSGovernment": "usgovvirginia"
        },
        "storeName": "[concat('store', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Sender')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ascalertConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Sender')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[tolower(variables('storeName'))]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storeName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storeName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storeName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storeName')))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('funcAppName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "functionapp",
            "properties": {
                "name": "[variables('funcAppName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('funcAppName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storeName')))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('funcAppName'))]",
                "[resourceId('Microsoft.Insights/components', variables('funcAppName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('funcAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('funcAppName'))]",
                "httpsOnly": true,
                "alwaysOn": true,
                "siteConfig": {
                    "powerShellVersion": "~7"
                  },
                "clientAffinityEnabled": true
            },
            "resources": [
                {
                    "apiVersion": "2018-11-01",
                    "type": "config",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('funcAppName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~3",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('funcAppName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('funcAppName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('storeName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('storeName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('storeName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('storeName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
                        "WEBSITE_CONTENTSHARE": "[toLower(variables('storeName'))]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://github.com/Swiftsolves-MSFT/Azure-Sentinel-Playbooks/blob/master/Ask-Remove-MalwareFromAzureStorage/RemoveFile-Template.zip?raw=true"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('funcAppName'), '/', variables('funcAppName'), '.azurewebsites.net')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
            ],
            "properties": {
                "siteName": "[variables('funcAppName')]",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storeName'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storeName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storeName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storeName'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storeName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storeName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storeName'), '/default/', tolower(variables('storeName')))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storeName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storeName'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('funcAppName')]",
            "type": "Microsoft.Insights/components",
            "location": "[variables('insightsLocation')[environment().name]]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites/', variables('funcAppName')))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[variables('funcAppName')]"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('funcAppName'))]",
                "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "SOCEmailAddress": {
                            "defaultValue": "[parameters('Recipient')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Alert_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascalert']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Alert/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Filter_azure-resource": {
                            "runAfter": {
                                "Initialize_variable_File_Uri": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@equals(item()?['type'], 'azure-resource')"
                            }
                        },
                        "Initialize_Blob_Uri": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BlobUri",
                                        "type": "string",
                                        "value": "https://@{triggerBody()?['CompromisedEntity']}.blob.core.windows.net/@{triggerBody()?['ExtendedProperties']?['Container']}/@{triggerBody()?['ExtendedProperties']?['Blob']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_ASCRG": {
                            "runAfter": {
                                "Initialize_variable_ASCSUBID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ASCRG",
                                        "type": "string",
                                        "value": "@{first(skip(split(body('Filter_azure-resource')[0]?['resourceId'],'/'),4))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_ASCSUBID": {
                            "runAfter": {
                                "Filter_azure-resource": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ASCSUBID",
                                        "type": "string",
                                        "value": "@{first(skip(split(body('Filter_azure-resource')[0]?['resourceId'],'/'),2))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_File_Uri": {
                            "runAfter": {
                                "Initialize_Blob_Uri": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileUri",
                                        "type": "string",
                                        "value": "https://@{triggerBody()?['CompromisedEntity']}.file.core.windows.net/@{triggerBody()?['extendedProperties']?['file share']}/@{triggerBody()?['extendedProperties']?['file']}"
                                    }
                                ]
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Initialize_variable_ASCRG": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case": {
                                    "case": "Azure Blobs",
                                    "actions": {
                                        "If_Blob_Request_approved": {
                                            "actions": {
                                                "BlobDeleteNotification": {
                                                    "runAfter": {
                                                        "Dismiss_Azure_Defender_Alert_2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>You’ve successfully mitigated a potential malware attack<br>\n<br>\nBlob &nbsp;@{triggerBody()?['ExtendedProperties']?['Blob']} was successfully deleted following your request</p>",
                                                            "Importance": "High",
                                                            "Subject": "Blob  @{triggerBody()?['ExtendedProperties']?['Blob']} was successfully deleted following your request",
                                                            "To": "@parameters('SOCEmailAddress')"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    }
                                                },
                                                "Delete_Blob": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://@{triggerBody()?['CompromisedEntity']}.blob.core.windows.net/",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "headers": {
                                                            "x-ms-version": "2019-07-07"
                                                        },
                                                        "method": "DELETE",
                                                        "uri": "@variables('BlobUri')"
                                                    }
                                                },
                                                "Dismiss_Azure_Defender_Alert_2": {
                                                    "runAfter": {
                                                        "Delete_Blob": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://management.azure.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://management.azure.com/subscriptions/@{variables('ASCSUBID')}/resourceGroups/@{variables('ASCRG')}/providers/Microsoft.Security/locations/centralus/alerts/@{triggerBody()?['SystemAlertId']}/dismiss?api-version=2019-01-01"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Send_approval_email_Blob": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@body('Send_approval_email_Blob')?['SelectedOption']",
                                                            "Delete"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Send_approval_email_Blob": {
                                            "runAfter": {},
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "Message": {
                                                        "Body": "<p>This email is sent by a playbook run on your subscription</p>\n<p>&nbsp;</p>\n<p>@{triggerBody()?['Description']}</p>\n<p>&nbsp;</p>\n<p>Storage Account: @{triggerBody()?['CompromisedEntity']}</p>\n<p>Container: @{triggerBody()?['ExtendedProperties']?['Container']}</p>\n<p>Blob name: @{triggerBody()?['ExtendedProperties']?['Blob']}</p>\n<p>Detected by: @{triggerBody()?['AlertType']}</p>\n<p>&nbsp;</p>\n<a href=\"@{triggerBody()?['AlertUri']}\">More details can be found here</a>\n<p>&nbsp;</p>\nAlternatively, you can remediate this manually:\nGo to Azure Portal, and delete blob @{triggerBody()?['ExtendedProperties']?['Blob']}  in storage account @{triggerBody()?['CompromisedEntity']}\n<p>&nbsp;</p>\n<p><strong>Delete Blob ?</strong></p>\n",
                                                        "HideHTMLMessage": false,
                                                        "Importance": "High",
                                                        "Options": "Delete, Ignore",
                                                        "ShowHTMLConfirmationDialog": true,
                                                        "Subject": "Blob deletion request - a potential security threat on @{triggerBody()?['CompromisedEntity']}",
                                                        "To": "@parameters('SOCEmailAddress')",
                                                        "UseOnlyHTMLMessage": true
                                                    },
                                                    "NotificationUrl": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "path": "/approvalmail/$subscriptions"
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "Azure Files",
                                    "actions": {
                                        "If_File_Request_approved": {
                                            "actions": {
                                                "Ask-Remove-MalwareFromAzureStorageTrigger": {
                                                    "runAfter": {},
                                                    "type": "Function",
                                                    "inputs": {
                                                        "body": "@triggerBody()",
                                                        "function": {
                                                            "id": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('funcAppName'), '/functions/removefile')]"
                                                        }
                                                    }
                                                },
                                                "Dismiss_Azure_Defender_Alert": {
                                                    "runAfter": {
                                                        "Ask-Remove-MalwareFromAzureStorageTrigger": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://management.azure.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://management.azure.com/subscriptions/@{variables('ASCSUBID')}/resourceGroups/@{variables('ASCRG')}/providers/Microsoft.Security/locations/centralus/alerts/@{triggerBody()?['SystemAlertId']}/dismiss?api-version=2019-01-01"
                                                    }
                                                },
                                                "FileDeleteNotification": {
                                                    "runAfter": {
                                                        "Dismiss_Azure_Defender_Alert": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>You’ve successfully mitigated a potential malware attack<br>\n<br>\nFile  @{triggerBody()?['extendedProperties']?['file']} was successfully deleted following your request<br>\n<br>\n</p>",
                                                            "Importance": "High",
                                                            "Subject": "File  @{triggerBody()?['extendedProperties']?['file']} was successfully deleted following your request",
                                                            "To": "@parameters('SOCEmailAddress')"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Send_approval_email_File": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@body('Send_approval_email_File')?['SelectedOption']",
                                                            "Delete"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Send_approval_email_File": {
                                            "runAfter": {},
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "Message": {
                                                        "Body": "<p>This email is sent by a playbook run on your subscription</p>\n<p>&nbsp;</p>\n<p>@{triggerBody()?['Description']}</p>\n<p>&nbsp;</p>\n<p>Storage Account: @{triggerBody()?['CompromisedEntity']}</p>\n<p>File Share: @{triggerBody()?['extendedProperties']?['file share']}</p>\n<p>File name: @{triggerBody()?['extendedProperties']?['file']}</p>\nGo to Azure Portal, and delete file \n<p>Detected by: @{triggerBody()?['AlertType']}</p>\n<p>&nbsp;</p>\n<a href=\"@{triggerBody()?['AlertUri']}\">More details can be found here</a>\n<p>&nbsp;</p>\nAlternatively, you can remediate this manually:\nGo to Azure Portal, and delete File @{triggerBody()?['extendedProperties']?['file']}in Share @{triggerBody()?['extendedProperties']?['file share']}within storage account @{triggerBody()?['CompromisedEntity']}\n<p>&nbsp;</p>\n<p><strong>Delete File ?</strong></p>",
                                                        "HideHTMLMessage": false,
                                                        "Importance": "High",
                                                        "Options": "Delete, Ignore",
                                                        "ShowHTMLConfirmationDialog": true,
                                                        "Subject": "File deletion request - a potential security threat on @{triggerBody()?['CompromisedEntity']}",
                                                        "To": "@parameters('SOCEmailAddress')",
                                                        "UseOnlyHTMLMessage": true
                                                    },
                                                    "NotificationUrl": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                    }
                                                },
                                                "path": "/approvalmail/$subscriptions"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['extendedProperties']?['service type']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "ascalert": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                                "connectionName": "[variables('ascalertConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "[variables('office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}