{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This Logic App will execute every hour and find any closed Sentinel incidents and will then dismiss the corresponding Azure Security Center alert. Acts as a background sync engine. ",
        "author": "Nathan Swift"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "IncidentClosed-Sync-ASCAlertDismiss",
            "type": "String"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "AzureSentinelLogAnalyticsWorkspaceName": {
        "defaultValue": "yourASCWorkspacename",
        "type": "string"
        },
        "AzureSentinelLogAnalyticsWorkspaceResourceGroupName": {
        "defaultValue": "yourASCWorkspaceRGname",
        "type": "string"
        }
    },
    "variables": {
        "AzureMonitorLogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]",
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 60,
                                "timeZone": "UTC"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Filter_array": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('HTTP')?['value']",
                                "where": "@contains(item()?['properties']?['relatedAlertProductNames'], 'Azure Security Center')"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Parse_JSON')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "HTTP_2": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "POST",
                                                "uri": "https://management.azure.com/subscriptions/@{body('Run_query_and_list_results')['value'][0]['ascsubid']}/resourceGroups/@{body('Run_query_and_list_results')['value'][0]['ascrgname']}/providers/Microsoft.Security/locations/centralus/alerts/@{body('Run_query_and_list_results')['value'][0]['ascalertname']}/dismiss?api-version=2019-01-01"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Run_query_and_list_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@body('Run_query_and_list_results')?['value']",
                                                        "@variables('emptyarray')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Run_query_and_list_results": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "SecurityAlert\n| summarize arg_max(TimeGenerated, *) by SystemAlertId\n| where SystemAlertId in(\"@{items('For_each')?['properties']?['relatedAlertIds']?[0]}\")\n| where TimeGenerated >= ago (90d)\n| where AlertLink != \"\"\n| extend ascsubid = split(AlertLink, \"/\", 9) , ascrgname = split(AlertLink, \"/\", 11) , ascalertname = split(AlertLink, \"/\", 7)\n| extend ascsubid= tostring(ascsubid[0]) , ascrgname = tostring(ascrgname[0]) , ascalertname = tostring(ascalertname[0]) \n| project ascsubid , ascrgname , ascalertname ",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "[parameters('AzureSentinelLogAnalyticsWorkspaceResourceGroupName')]",
                                            "resourcename": "[parameters('AzureSentinelLogAnalyticsWorkspaceName')]",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "[subscription().subscriptionId]",
                                            "timerange": "Set in query"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions/@{parameters('subid')}/resourceGroups/@{parameters('rgname')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('worksid')}/providers/Microsoft.SecurityInsights/Cases?api-version=2019-01-01-preview&$filter=(properties/status eq 'Closed')"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emptyarray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Filter_array')",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "etag": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "properties": {
                                                "properties": {
                                                    "caseNumber": {
                                                        "type": "integer"
                                                    },
                                                    "closeReason": {
                                                        "type": "string"
                                                    },
                                                    "closedReasonText": {
                                                        "type": "string"
                                                    },
                                                    "createdTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "firstAlertTimeGenerated": {
                                                        "type": "string"
                                                    },
                                                    "labels": {
                                                        "type": "array"
                                                    },
                                                    "lastAlertTimeGenerated": {
                                                        "type": "string"
                                                    },
                                                    "lastUpdatedTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "metrics": {
                                                        "properties": {
                                                            "SecurityAlert": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "owner": {
                                                        "properties": {
                                                            "email": {},
                                                            "name": {},
                                                            "objectId": {}
                                                        },
                                                        "type": "object"
                                                    },
                                                    "relatedAlertIds": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "relatedAlertProductNames": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "severity": {
                                                        "type": "string"
                                                    },
                                                    "startTimeUtc": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "tactics": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "totalComments": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "name",
                                            "etag",
                                            "type",
                                            "properties"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                                "connectionName": "[variables('AzureMonitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}